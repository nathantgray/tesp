// This file is an example of the glm_config.json5 that is used to
// configure the process of populating a feeder.

{
// general
    "in_file_glm": "", // the input feeder model. If None, taxonomy feeder used 
    "out_file_glm": "test.glm", // REQUIRED: the output populated feeder
    "case_name": "MyCase", // REQUIRED: a name for your case
    "substation_name": "MySub", // REQUIRED: a name for the substation
    "starttime": "2023-01-01 00:00:00", // REQUIRED: format "2023-01-01 00:00:00"
    "stoptime": "2023-01-02 00:00:00", // REQUIRED: format "2023-01-02 00:00:00"
    "timestep": 60, // REQUIRED: in seconds
    "timezone": "EST+5EDT", // REQUIRED
    "metrics_interval": 300, // DEFAULT: 300s, update frequency of the metrics collector
    "random seed": 13, // DEFAULT: 1 - seeds randomizer used in populating the models

// input files
    "file_residential_meta": './RECS_residential_metadata.json',
    "file_commercial_meta": './DSOT_commercial_metadata.json',
    "file_battery_meta": "./DSOT_battery_metadata.json",
    "file_ev_meta": "./DSOT_ev_model_metadata.json",
    "file_ev_driving_meta": "./DSOT_ev_driving_metadata.csv",

// dso
    "state": "VT",
    "county": "Burlington",
    "latitude": 44.78, // DEFAULT: 30.0
    "longitude": -73.21, // DEFAULT: -110.0
    "time_zone_offset": -5,
    "ashrae_zone": "6A",
    "climate_zone": 2,
    "weather_name": "localWeather", // DEFAULT:localWeather
    "weather_file": "AZ-Tucson_International_Ap.tmy3", // "VT-Burlington_International_Ap.tmy3" // DEFAULT:AZ-Tucson_International_Ap.tmy3
    "rooftop_pv_rating_MW": 7481.90,
    "utility_type": "Urban",
    "number_of_gld_homes": 1308,
    "comm_customers_per_bldg": 2.09,
    "RCI_customer_count_mix": {
      "residential": 0.8357,
      "commercial": 0.1265,
      "industrial": 0.0379
    },
    "income_level": ['Low', 'Middle', 'Upper'],
    "res_dso_type": "No_DSO_Type",

// RECS (Residential Energy Consumption Survey) Data
    "use_recs": true,
    "recs_exist": true, // Does 'out_file_residential_meta' exist? If false, generates RECS data based on config
    "file_recs_income_level": '../../../data/feeders/RECSwIncomeLvl.csv',
    "out_file_residential_meta": './RECS_residential_metadata.json',
    "out_file_hvac_set_point": './hvac_setpt_RECS.json',
    "sample": {
        'state': ["VT"],
        'housing_density': ['No_DSO_Type'],   //'No_DSO_Type', U, R, C possibly = S
        'income_level': ['Low', 'Middle', 'Upper']
    },
    "bin_size_threshold": 100,
    "wh_shift": 0, // Water heater shift
    "players": {"name": "lp", "file": "your_file","type": "double"},

// electric vehicles definitions
"ev_reserved_soc": 20, // Reserve state of charge of vehicle
"electric_cooling_percentage": 90,

// solar definitions
"solar_path": "../../../data/solar_data/solar_pv_power_profiles/",
"solar_P_player": "5_minute_dist_power.csv",
"solar_Q_player": "no_file",

// simulation parameters
    "message_broker": "helics_msg", // Use HELICS ("helics_msg") or FNCS  ("fncs_msg")
    "use_feeder": true, // Uses default taxonomy feeder if "in_file_glm" not defined
    "taxonomy": "R1-12.47-1.glm", // the taxonomy feeder used if "use_feeder" = true

// else
    "region": 2,
    "vll": 12470.0,
    "vln": 7200.0,
    "avg_house": 4500.0, // Average house size, in kVA
    "avg_commercial": 30000.0, // Averate commercial bldg size, in kVA

// add schedules
    "includes": [
        "${TESPDIR}/data/schedules/appliance_schedules.glm",
        "${TESPDIR}/data/schedules/water_and_setpoint_schedule_v5.glm",
        "${TESPDIR}/data/schedules/commercial_schedules.glm"
        ],

// add sets
"sets": {
    // "minimum_timestep": 15,
    "relax_naming_rules": 1,
    "warn": 0
},

// add defines
"defines": {

},

// DSOT Case Config
    // Include battery, flexible loads, electric vehicles, and solar
    "case_type":{"bt": 1, "fl": 1, "ev": 1, "pv": 1}, 
    // Percentage of DER customers participating in transactive rate
    "solar_percentage": 11, 
    "storage_percentage": 3, 
    "ev_percentage": 8,
    //"TransactiveHousePercentage": 80, // flexible loads

}