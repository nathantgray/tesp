// This file is an example of the glm_config.json5 that is used to
// configure the process of populating a feeder.

{
    // general
    "in_file_glm": "", //"South_D1_Alburgh_mod_tesp_v4.glm", // the input feeder model. If empty, taxonomy feeder used
    "out_file_glm": "test.glm", //"South_D1_Alburgh_mod_tesp_v4_populated.glm", // REQUIRED: the output populated feeder
    "case_name": "MyCase", // REQUIRED: a name for your case
    "substation_name": "MySub", // REQUIRED: a name for the substation
    "starttime": "2023-01-01 07:00:00", // REQUIRED: format "2023-01-01 00:00:00"
    "stoptime": "2023-01-02 07:00:00", // REQUIRED: format "2023-01-02 00:00:00"
    "timestep": 300, // REQUIRED: in seconds
    "timezone": "EST+5EDT", // REQUIRED
    "metrics_interval": 300, // DEFAULT: 300s, update frequency of the metrics collector
    "random seed": 13, // DEFAULT: 1 - seeds randomizer used in populating the models
    "message_broker": "",   // "" | "helics_msg" | "fncs_msg"

    // input files
    "file_residential_meta": './DSOT_residential_metadata.json',
    "file_commercial_meta": './DSOT_commercial_metadata.json',
    "file_battery_meta": "./DSOT_battery_metadata.json",
    "file_ev_meta": "./DSOT_ev_model_metadata.json",
    "file_ev_driving_meta": "./DSOT_ev_driving_metadata.csv",

    // dso
    "state": "VT",
    "county": "Burlington",
      // weather zone(s) and location(s) needs and should be in sync
    "latitude": 44.78, // DEFAULT: 30.0
    "longitude": -73.21, // DEFAULT: -110.0
    "interpolate": "QUADRATIC",
    "time_zone_offset": -5,
    "ashrae_zone": "6A",  // used in commercial pop
    "climate_zone": 2,  // used in RECs income pop
    "weather_name": "localWeather", // DEFAULT:localWeather
    "tmyfile": "VT-Burlington_International_Ap.tmy3",  // DEFAULT:AZ-Tucson_International_Ap.tmy3
    "rooftop_pv_rating_MW": 7481.90,
    "utility_type": "Urban",
    "number_of_gld_homes": 1308,
    "comm_customers_per_bldg": 2.09,
    "RCI_customer_count_mix": {
      "residential": 0.8357,
      "commercial": 0.1265,
      "industrial": 0.0379
    },
    "income_level": ['Low', 'Middle', 'Upper'],
    "res_dso_type": "No_DSO_Type",

    // RECS (Residential Energy Consumption Survey) Data
    "recs_exist": true, // Does 'out_file_residential_meta' exist? If false, generates RECS data based on config
    "file_recs_income_level": '../../../data/feeders/RECSwIncomeLvl.csv',
    "out_file_residential_meta": './RECS_residential_metadata.json',
    "out_file_hvac_set_point": './hvac_setpt_RECS.json',
    "sample": {
        'state': ["VT"],
        'housing_density': ['No_DSO_Type'],   //'No_DSO_Type', U, R, C possibly = S
        'income_level': ['Low', 'Middle', 'Upper']
    },
    "bin_size_threshold": 100,
    "wh_shift": 0,

    // Power and region to requirements for commercial and residential load parameters
    "taxonomy": "R1-12.47-1.glm",
    // else custom configuration
    "region": 2,
    "vll": 12470.0,
    "vln": 7200.0,
    "avg_house": 4500.0, // Average house size, in kVA
    "avg_commercial": 30000.0, // Averate commercial bldg size, in kVA
    "water_heater_model": "TWONODE", // MULTILAYER, TWONODE

    // add schedules
    "includes": [
        "${TESPDIR}/data/schedules/appliance_schedules.glm",
        "${TESPDIR}/data/schedules/water_and_setpoint_schedule_v5.glm",
        "${TESPDIR}/data/schedules/commercial_schedules.glm"
        ],

    // add sets
    "sets": {
        "minimum_timestep": 300,
        "relax_naming_rules": 1,
        "warn": 0
    },

    // add defines
    "defines": {
    },

    "case_type":{"bt": 1, "fl": 1, "ev": 1, "pv": 1},
    "solar_percentage": 0,
    "storage_percentage": 0,
    "ev_percentage": 10,

    // electric vehicles definitions
    "ev_reserved_soc": 20,

    // solar diction
    "solar": {
        "panel_type": 'SINGLE_CRYSTAL_SILICON',
        "rated_power":  7.5,
        "tilt_angle": 45.5,
        "efficiency": 0.2,
        "shading_factor": 0.1,
        "orientation_azimuth": 270.0,
        "orientation": "FIXED_AXIS",
        "SOLAR_TILT_MODEL": "SOLPOS",
        "SOLAR_POWER_MODEL": "FLATPLATE"
    },

    // player diction, remove 'no_' from the attribute to used the player
    "no_solar_P_player": {
        "name": "player",      // class name
        "attr": "P_out_inj",   // attribute being played
        "datatype": "double",  // the data type of the attribute
        "static": false,       // static value if true, data = static value, else data is csv file
        "data": "./DSO_2_5_minute_dist_power.csv"
    },
    "no_solar_Q_player": null,

    "electric_cooling_percentage": 90
}